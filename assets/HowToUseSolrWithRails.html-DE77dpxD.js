import{_ as n,c as a,a as t,o as e}from"./app-wnH-bxgu.js";const p={};function o(l,s){return e(),a("div",null,s[0]||(s[0]=[t(`<h1 id="ðŸ’Ž-how-to-use-solr-sunspot-with-rails-in-2018-like-a-peasant" tabindex="-1"><a class="header-anchor" href="#ðŸ’Ž-how-to-use-solr-sunspot-with-rails-in-2018-like-a-peasant"><span>ðŸ’Ž How to use Solr / Sunspot with Rails in 2018 like a peasant</span></a></h1><p>Working on Rails is good. It&#39;s fun. It&#39;s hipster.</p><p>But sometimes you have to use less-hipster stuff, like the search engine Solr.Â Solr allows you to do very powerful searches. It&#39;s used by Netflix, Apple, Reddit, and most importantly, AOL.</p><p>Solr can be tricky to use but your main issue won&#39;t be Solr, it will be ElasticSearch.</p><p>There is a gem called <a href="https://github.com/sunspot/sunspot" target="_blank" rel="noopener noreferrer">Sunspot</a> that is supposed to allow you to use Solr easily on Rails, but it&#39;s not been maintained correctly because everybody already migrated on ElasticSearch. So you will get stuck and then your colleagues will make fun of you for not using ElasticSearch. You will try to find tutorials on the internet, but they are all deprecated because they pre-date ElasticSearch.</p><p>But that shouldn&#39;t discourage you to use Solr. <strong>Solr is very powerful, mature and well-documented</strong>. Sure you&#39;ll stop being invited to office parties because you&#39;ll be &quot;the Solr guy&quot; but it can totally be worth it.</p><p>Let&#39;s look at three powerful implementations for a great FullText search experience :</p><h2 id="spellchecking-collation" tabindex="-1"><a class="header-anchor" href="#spellchecking-collation"><span>Spellchecking Collation</span></a></h2><p>We won&#39;t go into the detail of simple spellchecking there, the Sunspot documentation covers it very well.</p><p>However, if you need to implement queries of more than one word, you should useÂ collation instead.</p><p>In Solr&#39;s <em>schema.xml</em>, you can see that your queries are tokenized with <em>StandardTokenizerFactory</em>, which use whitespace as a token separator. This means that sunspot will separate your words, correct them, and then put them back again together.</p><h3 id="two-points-are-important-to-consider-there" tabindex="-1"><a class="header-anchor" href="#two-points-are-important-to-consider-there"><span>Two points are important to consider there</span></a></h3><ul><li><p>Sunspot doesn&#39;t require anÂ appearance threshold when spellchecking your words. Which means if you have weird words in your database, you&#39;ll also have weird corrections.</p><p><strong>Example :</strong> You have the following words in your database =&gt; &quot;Blu&quot;, &quot;House&quot;, &quot;Blue&quot;.</p><p>You are trying to correct the query &quot;Blue House&quot;. &quot;Blue&quot; might get spellchecked to Blu and &quot;House&quot; is spellchecked to &quot;House&quot;. You get &quot;Blu house&quot;, which yield no results.</p><p>A way to fix this is to force Solr to only correct a word if it&#39;s not present enough in the index. This way, you won&#39;t have backward corrections.In schema.xml, add this in the spellchecker component :</p><div class="language-xml line-numbers-mode" data-highlighter="prismjs" data-ext="xml"><pre><code class="language-xml"><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>float</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>maxQueryFrequency<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>0.0001<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>float</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p>Another thing to consider is that sunspot in its last release doesn&#39;t allow collation for 1 word.</p><p>This is annoying : your users might query one or more words, and you probably don&#39;t want to have to implement different solutions depending on the number of words.</p><p>The best solution is to just use collation all the time, but you have to tweak sunspot for that. <a href="https://github.com/sunspot/sunspot/issues/752" target="_blank" rel="noopener noreferrer">This issue</a>Â will show you the line to change : just monkey-patch Sunspot, replace at the end of line the number 2 by 0. A pull request was merged to fix this, but it never made its way to a release (at the time of writing, early 2018).</p></li></ul><p>With theses two tips and the documentation, you should be able to implement spellchecking without too many problems.</p><h2 id="implementing-a-suggester" tabindex="-1"><a class="header-anchor" href="#implementing-a-suggester"><span>Implementing a suggester</span></a></h2><p>Sadly again, Sunspot doesn&#39;t implement a suggester. This is very sad, since you need to get suggestions to implement <strong>TypeAhead search</strong>. If you want this fancy feature, you have to implement it yourself.</p><p>In schema.xml, add an autocomplete fieldtype, with factories at index time and query time :</p><div class="language-xml line-numbers-mode" data-highlighter="prismjs" data-ext="xml"><pre><code class="language-xml"><span class="line"><span class="token comment">&lt;!-- Custom implementations for autocomplete suggestions --&gt;</span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>fieldType</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>autocomplete<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>solr.TextField<span class="token punctuation">&quot;</span></span> <span class="token attr-name">positionIncrementGap</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>100<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>analyzer</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>index<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tokenizer</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>solr.KeywordTokenizerFactory<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>solr.LowerCaseFilterFactory<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>solr.EdgeNGramFilterFactory<span class="token punctuation">&quot;</span></span> <span class="token attr-name">minGramSize</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>1<span class="token punctuation">&quot;</span></span> <span class="token attr-name">maxGramSize</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>50<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>analyzer</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>analyzer</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>query<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tokenizer</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>solr.KeywordTokenizerFactory<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>solr.LowerCaseFilterFactory<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>analyzer</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>fieldType</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>in solrconfig.xml, add your suggestions component. We will be using <a href="https://lucene.apache.org/solr/6_2_1/solr-core/org/apache/solr/spelling/suggest/fst/AnalyzingLookupFactory.html" target="_blank" rel="noopener noreferrer">AnalyzingLookupFactory</a> as the factory to make everything work, it&#39;s a good one for this purpose.</p><div class="language-xml line-numbers-mode" data-highlighter="prismjs" data-ext="xml"><pre><code class="language-xml"><span class="line"><span class="token comment">&lt;!-- Custom search component to configure suggestions --&gt;</span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>searchComponent</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>suggest<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>solr.SuggestComponent<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>lst</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>suggester<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>str</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>name<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>suggest<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>str</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>str</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>lookupImpl<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>AnalyzingLookupFactory<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>str</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>str</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>storeDir<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>suggester_analyzinglookupfactory_dir<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>str</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>str</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>dictionaryImpl<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>DocumentDictionaryFactory<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>str</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>str</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>field<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>autocomplete<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>str</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>str</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>suggestAnalyzerFieldType<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>autocomplete<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>str</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>str</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>exactMatchFirst<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>str</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>str</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>preserveSep<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>str</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>str</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>preservePositionIncrements<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>str</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>str</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>buildOnOptimize<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>str</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>str</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>buildOnStartup<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>false<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>str</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>str</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>buildOnCommit<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>false<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>str</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>lst</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>searchComponent</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>In the same file, also add a request handler for actually asking the suggestions :</p><div class="language-xml line-numbers-mode" data-highlighter="prismjs" data-ext="xml"><pre><code class="language-xml"><span class="line"><span class="token comment">&lt;!-- Custom request handler to configure suggestions --&gt;</span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>requestHandler</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/suggesthandler<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>solr.SearchHandler<span class="token punctuation">&quot;</span></span> <span class="token attr-name">startup</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>lazy<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>lst</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>defaults<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>str</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>suggest<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>str</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>str</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>suggest.dictionary<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>suggest<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>str</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>str</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>suggest.count<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>10<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>str</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>lst</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>arr</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>components<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>str</span><span class="token punctuation">&gt;</span></span>suggest<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>str</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>arr</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>requestHandler</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>In your rails app, you can now define the URL to ask the suggestions request handler :</p><div class="language-ruby line-numbers-mode" data-highlighter="prismjs" data-ext="rb"><pre><code class="language-ruby"><span class="line">  <span class="token keyword">def</span> <span class="token method-definition"><span class="token function">get_suggestions</span></span></span>
<span class="line">    http_session <span class="token operator">=</span> Net<span class="token double-colon punctuation">::</span><span class="token class-name">HTTP</span><span class="token punctuation">.</span><span class="token keyword">new</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;localhost&#39;</span></span><span class="token punctuation">,</span> solr_port<span class="token punctuation">)</span></span>
<span class="line">    solr_response <span class="token operator">=</span> http_session<span class="token punctuation">.</span>get<span class="token punctuation">(</span>uri_solr<span class="token punctuation">)</span></span>
<span class="line">    extract_suggestions<span class="token punctuation">(</span>solr_response<span class="token punctuation">.</span>body<span class="token punctuation">)</span></span>
<span class="line">  <span class="token keyword">end</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">def</span> <span class="token method-definition"><span class="token function">uri_solr</span></span></span>
<span class="line">    uri <span class="token operator">=</span> <span class="token string-literal"><span class="token string">&quot;/solr/</span><span class="token interpolation"><span class="token delimiter punctuation">#{</span><span class="token content">Rails<span class="token punctuation">.</span>env</span><span class="token delimiter punctuation">}</span></span><span class="token string">/suggesthandler?wt=json&amp;suggest.q=</span><span class="token interpolation"><span class="token delimiter punctuation">#{</span><span class="token content"><span class="token variable">@keyword</span></span><span class="token delimiter punctuation">}</span></span><span class="token string">&quot;</span></span></span>
<span class="line">    <span class="token constant">URI</span><span class="token punctuation">.</span>encode<span class="token punctuation">(</span>uri<span class="token punctuation">)</span></span>
<span class="line">  <span class="token keyword">end</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container caution"><p class="hint-container-title">Caution</p><p>Be careful to sanitize your user inputs ! You don&#39;t want a Solr request injection !</p></div><p>Lastly, to build the dictionary, I use a custom rake task :</p><div class="language-ruby line-numbers-mode" data-highlighter="prismjs" data-ext="rb"><pre><code class="language-ruby"><span class="line"><span class="token keyword">def</span> <span class="token method-definition"><span class="token function">request_build_dictionary</span></span></span>
<span class="line">  http_session <span class="token operator">=</span> Net<span class="token double-colon punctuation">::</span><span class="token class-name">HTTP</span><span class="token punctuation">.</span><span class="token keyword">new</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;localhost&#39;</span></span><span class="token punctuation">,</span> solr_port<span class="token punctuation">)</span></span>
<span class="line">  http_session<span class="token punctuation">.</span>read_timeout <span class="token operator">=</span> <span class="token number">7200</span> <span class="token comment"># 2 hours max to build dictionary</span></span>
<span class="line">  uri <span class="token operator">=</span> <span class="token string-literal"><span class="token string">&quot;/solr/</span><span class="token interpolation"><span class="token delimiter punctuation">#{</span><span class="token content">Rails<span class="token punctuation">.</span>env</span><span class="token delimiter punctuation">}</span></span><span class="token string">/suggesthandler?suggest.build=true&quot;</span></span></span>
<span class="line">  http_session<span class="token punctuation">.</span>get<span class="token punctuation">(</span>uri<span class="token punctuation">)</span></span>
<span class="line">  <span class="token keyword">return</span></span>
<span class="line"><span class="token keyword">end</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">Tips</p><p>Building a suggestions dictionary takes time and resources. On a 11M entries database, It should take about 40 mins. I also need to configure sunspot to use 4 gigas of RAM minimum.</p></div><p>You should be able to get suggestions working with that.</p><h2 id="implementing-synonyms" tabindex="-1"><a class="header-anchor" href="#implementing-synonyms"><span>Implementing synonyms</span></a></h2><p>This is an easy one. In your schema.xml, go to your TextField processing :</p><div class="language-xml line-numbers-mode" data-highlighter="prismjs" data-ext="xml"><pre><code class="language-xml"><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>fieldType</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>solr.TextField<span class="token punctuation">&quot;</span></span> <span class="token attr-name">omitNorms</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>false<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>analyzer</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tokenizer</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>solr.StandardTokenizerFactory<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>solr.LowerCaseFilterFactory<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>analyzer</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>fieldType</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>We&#39;re just applying the StandardTokenFactory and the LowerCase one, let&#39;s just add a Synonym factory:</p><div class="language-xml line-numbers-mode" data-highlighter="prismjs" data-ext="xml"><pre><code class="language-xml"><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>fieldType</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>solr.TextField<span class="token punctuation">&quot;</span></span> <span class="token attr-name">omitNorms</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>false<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>analyzer</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tokenizer</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>solr.StandardTokenizerFactory<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>solr.LowerCaseFilterFactory<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>solr.SynonymFilterFactory<span class="token punctuation">&quot;</span></span> <span class="token attr-name">synonyms</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>synonyms.txt<span class="token punctuation">&quot;</span></span> <span class="token attr-name">ignoreCase</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span> <span class="token attr-name">expand</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span> <span class="token attr-name">tokenizerFactory</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>solr.StandardTokenizerFactory<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>solr.SnowballPorterFilterFactory<span class="token punctuation">&quot;</span></span> <span class="token attr-name">language</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>French<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>analyzer</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>fieldType</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Notice that I also added a SnowballPorterFilterFactory with the setting &quot;French&quot;. Now my common linking french words (Le, La, De, Du, Des, Les, a...) will be ignored.</p><p>Now add your synonyms in synonyms.txt (same folder as your schema.xml). Example :</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code class="language-text"><span class="line">av, ave =&gt; avenue</span>
<span class="line">bd,bld,blv,bvd =&gt; boulevard</span>
<span class="line">ber =&gt; berge</span>
<span class="line">brg =&gt; bourg</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>That&#39;s it. Enjoy powerful, instant fulltext searches on Solr and Rails !</p>`,38)]))}const u=n(p,[["render",o]]),i=JSON.parse('{"path":"/tutorials/HowToUseSolrWithRails.html","title":"ðŸ’Ž How to use Solr / Sunspot with Rails","lang":"en-US","frontmatter":{"title":"ðŸ’Ž How to use Solr / Sunspot with Rails","description":"Much search, very engine","footer":"CC-BY-4.0 Licensed | Copyright Â© 2018-present by Samuel Faure <3"},"git":{"updatedTime":1761891624000,"contributors":[{"name":"Samuelfaure","username":"Samuelfaure","email":"samuel.faure.dev@gmail.com","commits":1,"url":"https://github.com/Samuelfaure"}],"changelog":[{"hash":"3e80d8aaf6dc1a00d2b2d49762569040eac3e944","time":1761891624000,"email":"samuel.faure.dev@gmail.com","author":"Samuelfaure","message":"New article: AI dev trap"}]},"filePathRelative":"tutorials/HowToUseSolrWithRails.md"}');export{u as comp,i as data};
