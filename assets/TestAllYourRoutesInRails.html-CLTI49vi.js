import{_ as n,c as a,a as e,o as t}from"./app-wnH-bxgu.js";const p={};function o(l,s){return t(),a("div",null,s[0]||(s[0]=[e(`<h1 id="ðŸ’Ž-test-all-your-get-routes-in-rails-with-20-lines-of-code" tabindex="-1"><a class="header-anchor" href="#ðŸ’Ž-test-all-your-get-routes-in-rails-with-20-lines-of-code"><span>ðŸ’Ž Test all your GET routes in rails with 20 lines of code</span></a></h1><h2 id="what-and-why" tabindex="-1"><a class="header-anchor" href="#what-and-why"><span>What and Why?</span></a></h2><p>A great friend of mine (who also happens to be a great rails developer) told me once a great trick to increase your code coverage easily. You can just write a test to check if all your GET routes return a non-errored code.</p><p>Indeed, the most important information to check about our static GET pages is to know if they are currently erroring or not. So a quick test to check if those pages are working or not is a great low-hanging fruit.</p><h2 id="the-code-itself" tabindex="-1"><a class="header-anchor" href="#the-code-itself"><span>The code itself</span></a></h2><p>To be run with the RSpec framework:</p><div class="language-ruby line-numbers-mode" data-highlighter="prismjs" data-ext="rb"><pre><code class="language-ruby"><span class="line"><span class="token comment"># frozen_string_literal: true</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">require</span> <span class="token string-literal"><span class="token string">&#39;rails_helper&#39;</span></span></span>
<span class="line"></span>
<span class="line">describe Rails<span class="token punctuation">.</span>application<span class="token punctuation">.</span>routes <span class="token keyword">do</span></span>
<span class="line">  describe <span class="token string-literal"><span class="token string">&#39;#get&#39;</span></span><span class="token punctuation">,</span> <span class="token symbol">type</span><span class="token operator">:</span> <span class="token symbol">:request</span> <span class="token keyword">do</span></span>
<span class="line">    let<span class="token punctuation">(</span><span class="token symbol">:routes_info</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> described_class<span class="token punctuation">.</span>routes <span class="token punctuation">}</span></span>
<span class="line">    let<span class="token punctuation">(</span><span class="token symbol">:routes_get</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> routes_info<span class="token punctuation">.</span>select <span class="token punctuation">{</span> <span class="token operator">|</span>r<span class="token operator">|</span> r<span class="token punctuation">.</span>verb <span class="token operator">==</span> <span class="token string-literal"><span class="token string">&#39;GET&#39;</span></span> <span class="token punctuation">}</span> <span class="token punctuation">}</span></span>
<span class="line">    let<span class="token operator">!</span><span class="token punctuation">(</span><span class="token symbol">:user</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> create<span class="token punctuation">(</span><span class="token symbol">:user</span><span class="token punctuation">)</span> <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    specify <span class="token string-literal"><span class="token string">&#39;GET routes returns 200, 301 or 302 code&#39;</span></span> <span class="token keyword">do</span></span>
<span class="line">      routes_get<span class="token punctuation">.</span><span class="token keyword">each</span> <span class="token keyword">do</span> <span class="token operator">|</span>route<span class="token operator">|</span></span>
<span class="line">        route <span class="token operator">=</span> route<span class="token punctuation">.</span>path<span class="token punctuation">.</span>spec<span class="token punctuation">.</span>to_s<span class="token punctuation">.</span>gsub<span class="token punctuation">(</span><span class="token regex-literal"><span class="token regex">/\\(.:format\\)*$/</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">&#39;&#39;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">        get route_with_params<span class="token punctuation">(</span>route<span class="token punctuation">,</span> user<span class="token punctuation">)</span></span>
<span class="line">        expect<span class="token punctuation">(</span>response<span class="token punctuation">.</span>status<span class="token punctuation">)</span><span class="token punctuation">.</span>to eq<span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">or</span> eq<span class="token punctuation">(</span><span class="token number">301</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">or</span> eq<span class="token punctuation">(</span><span class="token number">302</span><span class="token punctuation">)</span></span>
<span class="line">      <span class="token keyword">end</span></span>
<span class="line">    <span class="token keyword">end</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">def</span> <span class="token method-definition"><span class="token function">route_with_params</span></span><span class="token punctuation">(</span>route<span class="token punctuation">,</span> user<span class="token punctuation">)</span></span>
<span class="line">      route<span class="token punctuation">.</span>gsub<span class="token operator">!</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;:user_id&#39;</span></span><span class="token punctuation">,</span> user<span class="token punctuation">.</span>id<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">end</span></span>
<span class="line">  <span class="token keyword">end</span></span>
<span class="line"><span class="token keyword">end</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>And that&#39;s pretty much it ! As you can see, we just extract all the routes from the Rails application and check that they return a valid code.</p><p>There is but one slightly complex point: some of the routes tested might need a parameter, such as a user ID. We use the method <code>route_with_params</code> to inject a user ID in those routes.</p><p>VoilÃ , you might have gotten a great boost to your code coverage with just 20 easy lines of code!</p><p>Happy coding to all!</p>`,11)]))}const c=n(p,[["render",o]]),r=JSON.parse('{"path":"/tutorials/TestAllYourRoutesInRails.html","title":"ðŸ’Ž Test all your GET routes in rails with 20 lines of code","lang":"en-US","frontmatter":{"title":"ðŸ’Ž Test all your GET routes in rails with 20 lines of code","description":"Wow Rails, Much testing, Very secure","footer":"CC-BY-4.0 Licensed | Copyright Â© 2018-present by Samuel Faure <3"},"git":{"updatedTime":1761891624000,"contributors":[{"name":"Samuelfaure","username":"Samuelfaure","email":"samuel.faure.dev@gmail.com","commits":1,"url":"https://github.com/Samuelfaure"}],"changelog":[{"hash":"3e80d8aaf6dc1a00d2b2d49762569040eac3e944","time":1761891624000,"email":"samuel.faure.dev@gmail.com","author":"Samuelfaure","message":"New article: AI dev trap"}]},"filePathRelative":"tutorials/TestAllYourRoutesInRails.md"}');export{c as comp,r as data};
